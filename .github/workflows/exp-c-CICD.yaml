name: CWBD_C
on:
  push:
    branches: [ main ]
    paths:
    - "exp_c/**"
    
  schedule:
    - cron: "30 5,15 * * *"
    
  pull_request:
    branches: [main, satish-dev, sbgd-dev]
    
jobs:
  Build-PL1-C:
    runs-on: ubuntu-latest
    
    container:
      image: python:latest
      options: --user root
      
      env:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4 

      - name: Check work folder
        run: pwd

      - name: run LS
        run: ls -lrt

      - name: run CWBD
        run: python ./exp_c/code/app.py && python ./exp_c/code/empDetails.py
      
      - name: run CWBI
        run: python ./exp_c/code/slp.py

      - name: check docker
        run: (ls /.dockerenv && echo Found dockerenv) || (echo No dockerenv)

  Build-PL2-C:
    runs-on: ubuntu-latest
    
    container:
      image: python:latest
      options: --user root
      
      env:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4 

      - name: Check work folder
        run: pwd

      - name: run LS
        run: ls -lrt

      - name: run CWBD
        run: python ./exp_c/code/app.py && python ./exp_c/code/empDetails.py
      
      - name: run CWBI
        run: python ./exp_c/code/slp.py

      - name: check docker
        run: (ls /.dockerenv && echo Found dockerenv) || (echo No dockerenv)

  Deploy-C:
    runs-on: ubuntu-latest
    needs: [Build-PL1-C, Build-PL2-C]
    container:
      image: python:latest
      options: --user root
      
      env:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4 

      - name: Check work folder
        run: pwd

      - name: run LS
        run: ls -lrt

      - name: run CWBD
        run: python ./exp_c/code/app.py && python ./exp_c/code/empDetails.py
      
      - name: run CWBI
        run: python ./exp_c/code/slp.py

      - name: check docker
        run: (ls /.dockerenv && echo Found dockerenv) || (echo No dockerenv)

  Static-Check-C:
    runs-on: ubuntu-latest
    needs: [Build-PL1-C, Build-PL2-C]
    container:
      image: python:latest
      options: --user root
      
      env:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4 

      - name: Execute static checks
        run: ls -la

  Test-C:
    runs-on: ubuntu-latest
    needs: Deploy-C
    container:
      image: python:latest
      options: --user root
      
      env:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4 

      - name: Check work folder
        run: pwd

      - name: run LS
        run: ls -lrt

      - name: run CWBD
        run: python ./exp_c/code/app.py && python ./exp_c/code/empDetails.py
      
      - name: run CWBI
        run: python ./exp_c/code/slp.py

      - name: check docker
        run: (ls /.dockerenv && echo Found dockerenv) || (echo No dockerenv)

  Publish-artifacts-C:
    runs-on: ubuntu-latest
    needs: Test-C
    container:
      image: python:latest
      options: --user root
      
      env:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 

      - name: Create work directory
        run: mkdir downloads

      - name: Add artifacts to downlads
        run: cp ./exp_c/code/*.py downloads

      - name: Create tar
        run: tar cvf patches.tar downloads/*.py 
      
      - name: Upload artifcats
        uses: actions/upload-artifact@v3
        with:
          name: Patches
          path: downloads